classdef Properties < symphonyui.core.descriptions.SourceDescription
    
    methods
        
        function obj = Properties()
            import symphonyui.core.*;
            
            obj.propertyDescriptors = [ ...
                PropertyDescriptor('double', pi, ...
                    'category', 'Primitive', ...
                    'description', 'Standard MatLab type'), ...
                PropertyDescriptor('integer', int32(23), ...
                    'category', 'Primitive', ...
                    'description', '32-bit integer value'), ...
                PropertyDescriptor('interval', int32(2), ...
                    'type', PropertyType('int32', 'scalar', [0 6]), ...
                    'category', 'Primitive', ...
                    'description', '32-bit integer value with an interval domain'), ...
                PropertyDescriptor('enumerated', int32(-1), ...
                    'type', PropertyType('int32', 'scalar', {int32(-1), int32(0), int32(1)}), ...
                    'category', 'Primitive', ...
                    'description', '32-bit integer value with an enumerated domain'), ...
                PropertyDescriptor('logical', true, ...
                    'category', 'Primitive', ...
                    'description', 'Boolean value that takes either true or false'), ...
                PropertyDescriptor('doubleMatrix', [1, 2], ...
                    'type', PropertyType('denserealdouble', 'matrix'), ...
                    'category', 'Compound', ...
                    'description', 'Matrix of standard MatLab type'), ...
                PropertyDescriptor('string', 'a sample string', ...
                    'category', 'Compound', ...
                    'description', 'Row vector of characters'), ...
                PropertyDescriptor('set', {'a', 'set'}, ...
                    'type', PropertyType('cellstr', 'row', {'a', 'set', 'of', 'strings'}), ...
                    'category', 'Compound', ...
                    'description', 'Row cell array whose every element is a string (char array)') ...
                PropertyDescriptor('selection', 'spring', ...
                    'type', PropertyType('char', 'row', {'spring', 'summer', 'fall', 'winter'}), ...
                    'category', 'Compound', ...
                    'description', 'Row vector of characters that can take any of the predefined set of values'), ...
                PropertyDescriptor('suggestion', 'banana', ...
                    'type', PropertyType('char', 'row', {'banana', 'apple', 'pear', 'kiwi', '...'}), ...
                    'category', 'Compound', ...
                    'description', 'Row vector of characters that offers suggestions'), ...
                PropertyDescriptor('number', 1, ...
                    'type', PropertyType('denserealdouble', 'row', {1, 2, 3, 4}), ...
                    'category', 'Compound', ...
                    'description', 'Row vector of characters that can take any of the predefined set of values'), ...
                PropertyDescriptor('date', datestr(now), ...
                    'type', PropertyType('char', 'row', 'datestr'), ...
                    'category', 'Compound', ...
                    'description', 'Row vector of characters that can take a date string'), ...
                PropertyDescriptor('tree', '[]', ...
                    'type', PropertyType('char', 'row', struct('folder1', {{'item1', 'item2'}}, 'folder2', {{'item1', 'item2'}})), ...
                    'category', 'Compound', ...
                    'description', 'Row vector of characters that can take any of the predefined set of values'), ...
                ];            
        end
        
    end
    
end

